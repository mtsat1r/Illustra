<UserControl x:Class="Illustra.Views.FileSystemTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewmodels="clr-namespace:Illustra.ViewModels"
             xmlns:models="clr-namespace:Illustra.Models"
             xmlns:helpers="clr-namespace:Illustra.Helpers"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:dd="urn:gong-wpf-dragdrop"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300"
             x:Name="FileSystemTreeViewControl">

    <UserControl.Resources>
        <helpers:BooleanInverseConverter x:Key="BooleanInverseConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <system:Boolean x:Key="TrueValue">True</system:Boolean>
        <system:Boolean x:Key="FalseValue">False</system:Boolean>
        <!-- TreeViewItem の状態をバインド -->
        <Style x:Key="BoundTreeViewItemStyle"
               TargetType="{x:Type TreeViewItem}"
               BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <Setter Property="IsExpanded"
                    Value="{Binding IsExpanded, Mode=TwoWay}"/>
            <Setter Property="IsSelected"
                    Value="{Binding IsSelected, Mode=TwoWay}"/>
            <Setter Property="Padding"
                    Value="0,0,0,0"/>
            <Setter Property="Tag"
                    Value="{Binding}"/>
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem x:Name="AddToFavoritesMenuItem"
                            Header="{DynamicResource String_FileSystemTreeView_AddToFavorites}"
                            Command="{Binding Path=PlacementTarget.Tag.AddToFavoritesCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                            IsEnabled="{Binding Path=PlacementTarget.Tag.IsFavorite, RelativeSource={RelativeSource AncestorType=ContextMenu}, Converter={StaticResource BooleanInverseConverter}}"/>
                        <Separator/>
                        <MenuItem Header="{DynamicResource String_Menu_View_SortOrder}">
                            <MenuItem x:Name="SortByNameMenuItem"
                                    Header="{DynamicResource String_Menu_View_SortByName}"
                                    IsCheckable="False"
                                    Command="{Binding Path=PlacementTarget.Tag.SortTypeCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                    CommandParameter="{x:Static models:SortType.Name}"
                                    IsChecked="{Binding PlacementTarget.Tag.IsSortByName, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"/>
                            <MenuItem x:Name="SortByDateMenuItem"
                                    Header="{DynamicResource String_Menu_View_SortByDate}"
                                    IsCheckable="False"
                                    Command="{Binding Path=PlacementTarget.Tag.SortTypeCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                    CommandParameter="{x:Static models:SortType.Created}"
                                    IsChecked="{Binding PlacementTarget.Tag.IsSortByName,
                                                RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                                                Converter={StaticResource BooleanInverseConverter}}"/>
                            <Separator/>
                            <MenuItem x:Name="SortAscendingMenuItem"
                                    Header="{DynamicResource String_Menu_View_SortAscending}"
                                    IsCheckable="False"
                                    Command="{Binding Path=PlacementTarget.Tag.SortDirectionCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                    CommandParameter="{StaticResource TrueValue}"
                                    IsChecked="{Binding PlacementTarget.Tag.IsAscending, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"/>
                            <MenuItem x:Name="SortDescendingMenuItem"
                                    Header="{DynamicResource String_Menu_View_SortDescending}"
                                    IsCheckable="False"
                                    Command="{Binding Path=PlacementTarget.Tag.SortDirectionCommand, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                                    CommandParameter="{StaticResource FalseValue}"
                                    IsChecked="{Binding PlacementTarget.Tag.IsAscending,
                                                RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                                                Converter={StaticResource BooleanInverseConverter}}"/>
                        </MenuItem>
                    </ContextMenu>
                </Setter.Value>
            </Setter>

            <!-- イベントハンドラの関連付け -->
            <EventSetter Event="MouseEnter"
                         Handler="TreeViewItem_MouseEnter"/>
            <EventSetter Event="MouseLeave"
                         Handler="TreeViewItem_MouseLeave"/>

            <!-- SystemColorブラシをオーバーライド -->
            <Style.Resources>
                <!-- 選択時の背景色（フォーカスあり） -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="LightBlue"/>
                <!-- 選択時の背景色（フォーカスなし） -->
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                 Color="LightBlue"/>
                <!-- 選択時のテキスト色 -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                 Color="Black"/>
            </Style.Resources>

        </Style>
    </UserControl.Resources>

    <Grid KeyboardNavigation.TabNavigation="Local">
        <TreeView x:Name="FolderTreeView"
                  DataContext="{x:Null}"
                  ItemContainerStyle="{StaticResource BoundTreeViewItemStyle}"
                  SelectedItemChanged="TreeView_SelectedItemChanged"
                  VirtualizingStackPanel.IsVirtualizing="False"
                  VirtualizingStackPanel.VirtualizationMode="Standard"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  IsTabStop="True"
                  TabIndex="2"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  dd:DragDrop.IsDragSource="False"
                  dd:DragDrop.IsDropTarget="True">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <!-- フォルダアイコン (テキストで表現) -->
                        <TextBlock Text="📁"
                                   FontFamily="Segoe UI Emoji"
                                   Margin="0,0,5,0"
                                   Visibility="{Binding IsFolder, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <!-- 項目名 -->
                        <TextBlock Text="{Binding Name}"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </Grid>
</UserControl>
